@page "/todolist/{taskId:int}"
@using BlazorTodo.DB;
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Edit Task</h3>
<div class="form-group">
    <div>
        <label>Title</label>
        <input class="form-control m-2" type="text" style="width: 500px; height: 40px; font-family: 'Cascadia Mono'; font-weight: 700" @bind="updatedTask.Title" />
    </div>
    <div>
        <label for="description">Description</label>
        <input class="form-control m-2 align-text-top" type="text" style="width: 500px; height: 200px; font-family: 'Cascadia Mono'; font-weight: 700; vertical-align: top;" @bind="updatedTask.Description" autocomplete="off" />
    </div>
    <div>
        <label>Created On: @updatedTask.CreatedOn.ToString()</label>
    </div>
    <div>
        <label>Updated On: @updatedTask.UpdatedOn.ToString()</label>
    </div>
    <div class="form-check">
        <input type="checkbox" id="isCompleted" class="form-check-input" @bind="updatedTask.IsDone" />
        <label class="form-check-label" for="isCompleted">Completed</label>
    </div>
    <button class="btn btn-primary" @onclick="() => UpdateTask(taskId)">Save Changes</button>
    <button class="btn btn-danger" @onclick="() => DeleteTask(taskId)">Delete</button>
</div>


@code {
    [Parameter]
    public int taskId { get; set; }
    public Model.Task oldTask { get; set; }
    public Model.Task updatedTask { get; set; }

    protected override void OnInitialized()
    {
        using(var db = new AppDbContext())
        {
            oldTask = db.Tasks.Where(task => task.TaskId == taskId).FirstOrDefault();
            if(oldTask == null)
            {
                NavigationManager.NavigateTo($"/todolist");
            }
            updatedTask = oldTask;
        }

    } 

    private void DeleteTask(int deleteTaskId)
    {
        using(var db = new AppDbContext())
        {
            var deletedTask = db.Tasks.Where(task => task.TaskId == deleteTaskId).FirstOrDefault();
            db.Tasks.Remove(deletedTask);
            db.SaveChanges();
            NavigationManager.NavigateTo($"/todolist");
            Console.WriteLine($"{deleteTaskId} - Task удалена");
        }

    }

    private void UpdateTask(int updateTaskId)
    {
        using(var db = new AppDbContext())
        {
            db.Tasks.Update(oldTask);
            db.SaveChanges();
            NavigationManager.NavigateTo($"/todolist");
            Console.WriteLine($"{updateTaskId} - Task изменена");
        }
        
    }
}
